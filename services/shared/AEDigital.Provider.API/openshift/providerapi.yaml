---
kind: Template
apiVersion: v1
metadata:
  name: aedigitalproviderapi 
  annotations:
    openshift.io/display-name: "aedigitalproviderapi"
    description: aedigitalproviderapi
    tags: quickstart,dotnet,.net
    iconClass: icon-dotnet
    template.openshift.io/provider-display-name: Red Hat, Inc.
    template.openshift.io/documentation-url: https://github.com/redhat-developer/s2i-dotnetcore
    template.openshift.io/support-url: https://access.redhat.com
###############################################################################################
parameters:
# - name: GITLAB_TOKEN
#   displayName: providegitlabtoken
#   #  required: true
#   value: toolstoken
# - name: GITLAB_WEBHOOK
#   displayName: providerwebhook
#   #  required: true
#   value: tools
- name: NAME
  displayName: Name
  description: The name assigned to all of the frontend objects defined in this template.
  required: true
  value: aedigitalproviderapi


- name: NAMESPACE
  displayName: Namespace
  description: The OpenShift Namespace where the ImageStream resides.
  required: true
  value: planmp-tools ## Changed from openshift


- name: PROJECT
  displayName: 'Project'
  description: 'unique project identifier, will be part of project name'
  required: true
  value: 'aedigitalproviderapi'



- name: MEMORY_LIMIT
  displayName: Memory Limit
  description: Maximum amount of memory the container can use.
  required: true
  value: 128Mi
- name: DOTNET_IMAGE_STREAM_TAG
  displayName: ".NET builder"
  required: true
  description: The image stream tag which is used to build the code.
  value: dotnet:5.0

- name: SOURCE_REPOSITORY_URL
  displayName: Git Repository URL
  description: The URL of the repository with your application source code.
  required: true
  value: https://gitlab.gov.ab.ca/ae-digital-redesign/aedigital.git

- name: SOURCE_REPOSITORY_REF
  displayName: Git Reference
  description: Set this to a branch name, tag or other ref of your repository if you
    are not using the default branch.
  value: master # dotnet-5.0 

- name: CONTEXT_DIR
  displayName: Context Directory
  description: Set this to use a subdirectory of the source code repository
  value: /services/shared/AEDigital.Provider.API/AEDigital.Provider.API
- name: APPLICATION_DOMAIN
  displayName: Application Hostname
  description: The exposed hostname that will route to the .NET Core service, if left
    blank a value will be defaulted.
  value: ''


- name: TOKEN_PASS
  displayName: Gitlab Token Password
  description: A base64 encoded GitLab token password.
  value: UEJtaU5wb0FYV1VDSE1UOUpvX2k=

- name: TOKEN_USER_ID
  displayName: Gitlab Token User ID
  description: A base64 encoded GitLab token user name.
  value: Z2l0bGFiK2RlcGxveS10b2tlbi03MA==



- name: DOTNET_STARTUP_PROJECT
  displayName: Startup Project
  description: Set this to a project file (e.g. csproj) or a folder containing a single
    project file.
  value: AEDigital.Provider.API.csproj #app
- name: DOTNET_PUBLISH_READYTORUN
  displayName: Ahead-of-time compilation
  description: Set this to 'true' to perform an ahead-of-time compilation.
- name: DOTNET_ASSEMBLY_NAME
  displayName: Startup Assembly
  description: Set this when the assembly name is overridden in the project file.
- name: DOTNET_TOOLS
  displayName: ".NET Tools"
  description: Set this to a space separated list of .NET tools needed to publish.
- name: DOTNET_NPM_TOOLS
  displayName: Npm Tools
  description: Set this to a space separated list of npm tools needed to publish.
- name: DOTNET_TEST_PROJECTS
  displayName: Test projects
  description: Set this to a space separated list of test projects to run before publishing.
- name: DOTNET_CONFIGURATION
  displayName: Configuration
  description: Set this to configuration (Release/Debug).
  value: Release
- name: DOTNET_RESTORE_SOURCES
  displayName: NuGet package sources
  description: Set this to override the NuGet.config sources. Cannot be combined with
    DOTNET_RESTORE_CONFIGFILE.
- name: DOTNET_RESTORE_CONFIGFILE
  displayName: NuGet.Config file
  description: Set this to a Nuget.Config file. Cannot be combined with DOTNET_RESTORE_SOURCES.
#################################################################################################  
objects:
- apiVersion: v1
  kind: Secret
  data:
    password: '${TOKEN_PASS}'
    username: '${TOKEN_USER_ID}'
  metadata:
    name: '${PROJECT}-${NAME}-git-token'
    namespace: '${NAME_SPACE}'
  type: kubernetes.io/basic-auth

- kind: Route
  apiVersion: v1
  metadata:
    name: "${NAME}"
  spec:
    host: "${APPLICATION_DOMAIN}"
    to:
      kind: Service
      name: "${NAME}"
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
- kind: Service
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Exposes and load balances the application pods
  spec:
    ports:
    - name: web
      port: 8080
      targetPort: 8080
    selector:
      name: "${NAME}"
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Keeps track of changes in the application image
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Defines how to build the application
  spec:
    source:
      type: Git
      git:
        uri: "${SOURCE_REPOSITORY_URL}"
        ref: "${SOURCE_REPOSITORY_REF}"
      contextDir: "${CONTEXT_DIR}"
      sourceSecret: # Added
        name: '${PROJECT}-${NAME}-git-token'
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: ImageStreamTag
          namespace: "${NAMESPACE}"
          name: "${DOTNET_IMAGE_STREAM_TAG}"
        env:
        - name: DOTNET_STARTUP_PROJECT
          value: "${DOTNET_STARTUP_PROJECT}"
        - name: DOTNET_ASSEMBLY_NAME
          value: "${DOTNET_ASSEMBLY_NAME}"
        - name: DOTNET_NPM_TOOLS
          value: "${DOTNET_NPM_TOOLS}"
        - name: DOTNET_TEST_PROJECTS
          value: "${DOTNET_TEST_PROJECTS}"
        - name: DOTNET_CONFIGURATION
          value: "${DOTNET_CONFIGURATION}"
        - name: DOTNET_RESTORE_SOURCES
          value: "${DOTNET_RESTORE_SOURCES}"
        - name: DOTNET_TOOLS
          value: "${DOTNET_TOOLS}"
        - name: DOTNET_PUBLISH_READYTORUN
          value: "${DOTNET_PUBLISH_READYTORUN}"
        - name: DOTNET_RESTORE_CONFIGFILE
          value: "${DOTNET_RESTORE_CONFIGFILE}"
    output:
      to:
        kind: ImageStreamTag
        name: "${NAME}:latest"
    triggers:
    - type: ImageChange
    - type: ConfigChange
    # - type: GitLab
    #   generic:
    #     secretReference: 
    #       name: "${GITLAB_WEBHOOK}"
    # - type: Generic
    #   generic:
    #     secret: "${GITLAB_WEBHOOK}"
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Defines how to deploy the application server
  spec:
    strategy:
      type: Rolling
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - dotnet-app
        from:
          kind: ImageStreamTag
          name: "${NAME}:latest"
    - type: ConfigChange
    replicas: 1
    selector:
      name: "${NAME}"
    template:
      metadata:
        name: "${NAME}"
        labels:
          name: "${NAME}"
      spec:
        containers:
        - name: dotnet-app
          image: " "
          ports:
          - containerPort: 8080
          livenessProbe:
            httpGet:
              path: "/swagger/"
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 40
            timeoutSeconds: 15
          readinessProbe:
            httpGet:
              path: "/swagger/"
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 30
          resources:
            limits:
              memory: "${MEMORY_LIMIT}"
          env: []
######################################################################################
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: dotnet
    annotations:
      openshift.io/display-name: .NET
  spec:
    tags:
      - name: '5.0'
        annotations:
          openshift.io/display-name: .NET 5 (UBI 8)
          description: >-
            Build and run .NET 5 applications on UBI 8. For more information
            about using this builder image, including OpenShift
            considerations, see
            https://github.com/redhat-developer/s2i-dotnetcore/tree/master/5.0/build/README.md.
          iconClass: icon-dotnet
          tags: 'builder,.net,dotnet,dotnetcore,rh-dotnet50,hidden'
          supports: 'dotnet:5.0,dotnet'
          sampleRepo: 'https://github.com/redhat-developer/s2i-dotnetcore-ex'
          sampleContextDir: app
          sampleRef: dotnet-5.0 # dotnetcore-5.0
          version: '5.0'
        referencePolicy:
          type: Local
        from:
          kind: DockerImage
          name: 'registry.access.redhat.com/ubi8/dotnet-50:5.0'
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: dotnet-runtime
    annotations:
      openshift.io/display-name: .NET Core Runtime
  spec:
    tags:
      - name: '5.0'
        annotations:
          openshift.io/display-name: .NET 5 Runtime (UBI 8)
          description: >-
            Run .NET 5 applications on UBI 8. For more information about using
            this image, including OpenShift considerations, see
            https://github.com/redhat-developer/s2i-dotnetcore/tree/master/5.0/runtime/README.md.
          iconClass: icon-dotnet
          tags: 'runtime,.net-runtime,dotnet-runtime,dotnetcore-runtime,hidden'
          supports: dotnet-runtime
          version: '5.0'
        referencePolicy:
          type: Local
        from:
          kind: DockerImage
          name: 'registry.access.redhat.com/ubi8/dotnet-50-runtime:5.0'